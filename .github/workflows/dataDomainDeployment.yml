name: Data Node Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'code/**'
      - 'infra/BigDataPool/**'
      - 'infra/Cosmos/**'
      - 'infra/DataFactory/**'
      - 'infra/KeyVault/**'
      - 'infra/MariaDb/**'
      - 'infra/MySql/**'
      - 'infra/PostgreSql/**'
      - 'infra/SqlDatabase/**'
      - 'infra/SqlPools/**'
      - 'infra/SqlServer/**'
      - 'infra/Synapse/**'
      - '.github/workflows/dataDomainDeployment.yml'

env:
  AZURE_SUBSCRIPTION_ID: '2f68ca09-59d9-4ab5-ad11-c54872bfa28d'
  AZURE_RESOURCE_GROUP_NAME: 'dn001-dd001'
  AZURE_LOCATION: northeurope

jobs:
  prerequisite:
    runs-on: ubuntu-latest

    steps:
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Create resource group
    - name: Validating existence of resource group
      id: resource_group_storage
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Validating existence of resource group ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          az group exists --name ${{ env.AZURE_RESOURCE_GROUP_NAME }}
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2

  validation:
    needs: [ prerequisite ]
    runs-on: ubuntu-latest
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Key Vault 001 - validation
    - name: Deploy Key Vault 001 - validation
      id: key_vault_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault001.json
        deploymentMode: Validate
    
    # Generate Password
    - name: Generate Password
      id: generate_password_001
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy SQL Server 001 - validation
    - name: Deploy SQL Server 001 - validation
      id: sql_server_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlServer/deploy.sqlServer.json
        parameters: ${{ github.workspace }}/infra/SqlServer/params.sqlServer001.json administratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy SQL Database 001 - validation
    - name: Deploy SQL Database 001 - validation
      id: sql_database_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlDatabase/deploy.sqlDatabase.json
        parameters: ${{ github.workspace }}/infra/SqlDatabase/params.sqlDatabase001.json sqlServerAdministratorLoginPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy Data Factory 001 - validation
    - name: Deploy Data Factory 001 - validation
      id: data_factory_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/DataFactory/deploy.dataFactory.json
        parameters: ${{ github.workspace }}/infra/DataFactory/params.dataFactory001.json
        deploymentMode: Validate
    
    # Deploy Synapse 001 - validation
    - name: Deploy Synapse 001 - validation
      id: synapse_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Synapse/deploy.synapse.json
        parameters: ${{ github.workspace }}/infra/Synapse/params.synapse001.json synapseSqlAdministratorPassword="${{ steps.generate_password_003.outputs.password }}"
        deploymentMode: Validate
    
    # Deploy Sql Pool 001 - validation
    - name: Deploy Sql Pool 001 - validation
      id: sql_pool_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SqlPool/deploy.sqlPool.json
        parameters: ${{ github.workspace }}/infra/SqlPool/params.sqlPool001.json
        deploymentMode: Validate
    
    # Deploy Big Data Pool 001 - validation
    - name: Deploy Big Data Pool 001 - validation
      id: big_data_pool_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/BigDataPool/deploy.bigDataPool.json
        parameters: ${{ github.workspace }}/infra/BigDataPool/params.bigDataPool001.json
        deploymentMode: Validate

    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
    
    ################################################################################

    # Generate Password
    - name: Generate Password
      id: generate_password
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Update parameter files
    - name: Update Parameter files
      id: update_parameter_files
      run: |
        echo "Updating value in parameter file"
        pwsh $GITHUB_WORKSPACE/code/UpdateParameterFile.ps1 -FilePath $GITHUB_WORKSPACE/infra/SqlServer/params.sqlServer001.json -administratorLoginPassword "${{ steps.generate_password.outputs.password }}"
        pwsh $GITHUB_WORKSPACE/code/UpdateParameterFile.ps1 -FilePath $GITHUB_WORKSPACE/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json -sqlServerAdministratorLoginPassword "${{ steps.generate_password.outputs.password }}"
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Deploy key vault 001 - validation
    - name: Deploy key vault 001 - validation
      id: key_vault_001_validation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group validate \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/KeyVault/deploy.keyVault.json \
            --parameters $GITHUB_WORKSPACE/infra/KeyVault/params.keyVault001.json
    
    # Deploy databricks 001 - validation
    - name: Deploy databricks 001 - validation
      id: databricks_001_validation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group validate \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/Databricks/deploy.databricks.json \
            --parameters $GITHUB_WORKSPACE/infra/Databricks/params.databricks001.json
    
    # Deploy sql server 001 - validation
    - name: Deploy sql server 001 - validation
      id: sql_server_001_validation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group validate \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/SqlServer/deploy.sqlServer.json \
            --parameters $GITHUB_WORKSPACE/infra/SqlServer/params.sqlServer001.json
    
    # Deploy sql data warehouse 001 - validation
    - name: Deploy sql data warehouse 001 - validation
      id: sql_data_warehouse_001_validation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group validate \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/SqlDataWarehouse/deploy.sqlDataWarehouse.json \
            --parameters $GITHUB_WORKSPACE/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json
    
    # # Deploy synapse workspace 001 - validation
    # - name: Deploy synapse workspace 001 - validation
    #   id: synapse_001_validation
    #   uses: azure/cli@v1
    #   with:
    #     azcliversion: latest
    #     inlineScript: |
    #       echo "Creating deployment in resource group"
    #       az deployment group validate \
    #         --mode Incremental \
    #         --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
    #         --template-file $GITHUB_WORKSPACE/infra/Synapse/deploy.synapse.json \
    #         --parameters $GITHUB_WORKSPACE/infra/Synapse/params.synapse001.json
    #   continue-on-error: true
    
    # Deploy data factory 001 - validation
    - name: Deploy data factory 001 - validation
      id: data_factory_001_validation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group validate \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/DataFactory/deploy.dataFactory.json \
            --parameters $GITHUB_WORKSPACE/infra/DataFactory/params.dataFactory001.json
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
  
  deployment:
    needs: [ prerequisite, validation ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Generate Password
    - name: Generate Password
      id: generate_password
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Update parameter files
    - name: Update Parameter files
      id: update_parameter_files
      run: |
        echo "Updating value in parameter file"
        pwsh $GITHUB_WORKSPACE/code/UpdateParameterFile.ps1 -FilePath $GITHUB_WORKSPACE/infra/SqlServer/params.sqlServer001.json -administratorLoginPassword "${{ steps.generate_password.outputs.password }}"
        pwsh $GITHUB_WORKSPACE/code/UpdateParameterFile.ps1 -FilePath $GITHUB_WORKSPACE/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json -sqlServerAdministratorLoginPassword "${{ steps.generate_password.outputs.password }}"
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy key vault 001
    - name: Deploy key vault 001
      id: key_vault_001_deployment
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group create \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/KeyVault/deploy.keyVault.json \
            --parameters $GITHUB_WORKSPACE/infra/KeyVault/params.keyVault001.json
    
    # Deploy databricks 001
    - name: Deploy databricks 001
      id: databricks_001_deployment
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group create \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/Databricks/deploy.databricks.json \
            --parameters $GITHUB_WORKSPACE/infra/Databricks/params.databricks001.json
    
    # Deploy sql server 001
    - name: Deploy sql server 001
      id: sql_server_001_deployment
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group create \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/SqlServer/deploy.sqlServer.json \
            --parameters $GITHUB_WORKSPACE/infra/SqlServer/params.sqlServer001.json
    
    # Deploy sql data warehouse 001
    - name: Deploy sql data warehouse 001
      id: sql_data_warehouse_001_deployment
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group create \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/SqlDataWarehouse/deploy.sqlDataWarehouse.json \
            --parameters $GITHUB_WORKSPACE/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json
    
    # # Deploy synapse workspace 001
    # - name: Deploy synapse workspace 001
    #   id: synapse_001_deployment
    #   uses: azure/cli@v1
    #   with:
    #     azcliversion: latest
    #     inlineScript: |
    #       echo "Creating deployment in resource group"
    #       az deployment group create \
    #         --mode Incremental \
    #         --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
    #         --template-file $GITHUB_WORKSPACE/infra/Synapse/deploy.synapse.json \
    #         --parameters $GITHUB_WORKSPACE/infra/Synapse/params.synapse001.json
    
    # Deploy data factory 001
    - name: Deploy data factory 001
      id: data_factory_001_deployment
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating deployment in resource group"
          az deployment group create \
            --mode Incremental \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/infra/DataFactory/deploy.dataFactory.json \
            --parameters $GITHUB_WORKSPACE/infra/DataFactory/params.dataFactory001.json
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
