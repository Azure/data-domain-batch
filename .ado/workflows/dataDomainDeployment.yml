name: Data Node Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - code/*
      - infra/KeyVault/*
      - infra/Databricks/*
      - infra/DataFactory/*
      - infra/Synapse/*
      - infra/SqlDataWarehouse/*
      - infra/SqlServer/*
      - infra/PrivateEndpoint/*
      - .ado/workflows/dataDomainDeployment.yml

variables:
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: 'Marvins Azure Subscription(558bd446-4212-46a2-908c-9ab0a628705e)'
  AZURE_SUBSCRIPTION_ID: '558bd446-4212-46a2-908c-9ab0a628705e'
  AZURE_RESOURCE_GROUP_NAME: 'dn001-dd001'
  AZURE_LOCATION: 'North Europe'

stages:
  - stage: Validation
    displayName: 'Validation of ARM templates'
    jobs:
      - job: Validation
        displayName: 'Validation of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout code
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Generate Password
        - task: PowerShell@2
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy key vault 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_validation
          displayName: Deploy key vault 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Validation'
        
        # Deploy databricks 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_001_validation
          displayName: Deploy databricks 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks001.json'
            deploymentMode: 'Validation'
        
        # Deploy sql server 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_001_validation
          displayName: Deploy sql server 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer001.json'
            deploymentMode: 'Validation'
            overrideParameters: '-administratorLoginPassword $(password)'
        
        # Deploy data warehouse 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_data_warehouse_001_validation
          displayName: Deploy data warehouse 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlDataWarehouse/deploy.sqlDataWarehouse.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json'
            deploymentMode: 'Validation'
            overrideParameters: '-sqlServerAdministratorLoginPassword $(password)'
        
        # Deploy synapse 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: synapse_001_validation
          displayName: Deploy synapse 001 - validation
          enabled: false
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Synapse/deploy.synapse.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Synapse/params.synapse001.json'
            deploymentMode: 'Validation'
        
        # Deploy data factory 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_validation
          displayName: Deploy data factory 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Validation'

  - stage: Deployment
    displayName: 'Deployment of ARM templates'
    dependsOn: Validation
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: 'Deployment of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout repository
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Generate Password
        - task: PowerShell@2
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy key vault 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_deployment
          displayName: Deploy key vault 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Incremental'
        
        # Deploy databricks 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_001_deployment
          displayName: Deploy databricks 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks001.json'
            deploymentMode: 'Incremental'
        
        # Deploy sql server 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_001_deployment
          displayName: Deploy sql server 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer001.json'
            deploymentMode: 'Incremental'
            overrideParameters: '-administratorLoginPassword $(password)'
        
        # Deploy data warehouse 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_data_warehouse_001_deployment
          displayName: Deploy data warehouse 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlDataWarehouse/deploy.sqlDataWarehouse.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlDataWarehouse/params.sqlDataWarehouse001.json'
            deploymentMode: 'Incremental'
            overrideParameters: '-sqlServerAdministratorLoginPassword $(password)'
        
        # Deploy synapse 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: synapse_001_deployment
          displayName: Deploy synapse 001
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Synapse/deploy.synapse.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Synapse/params.synapse001.json'
            deploymentMode: 'Incremental'
        
        # Deploy data factory 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_deployment
          displayName: Deploy data factory 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Incremental'
